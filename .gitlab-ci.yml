variables:
  GIT_DEPTH: 1
  UPSTREAM_REF:
    value: master
    description: "Name of upstream (cdrouter) branch. Variable used by test job."

stages:
  - build

workflow:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'
    - if: '$CI_COMMIT_BRANCH == "master"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "pipeline"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_PIPELINE_SOURCE == "web"'

# jobs starting with a period (.) are ignored

# default:
#   before_script:
#     - |
#       if [ -n "$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME" ]; then
#           git checkout -B $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME;
#       elif [ -n "$CI_COMMIT_BRANCH" ]; then
#           git checkout -B $CI_COMMIT_BRANCH;
#       fi

docker:
  image: docker:19.03.12-git
  services:
    - docker:19.03.12-dind
  stage: build
  script:
    - |
      CDR_DOCKER_VER=$(echo $CI_COMMIT_TAG | tr -d v)
      docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      docker build -t cdrouter.py/cdrouter.py:$CDR_DOCKER_VER .
      docker tag cdrouter.py/cdrouter.py:$CDR_DOCKER_VER $CI_REGISTRY/qacafe/cdrouter/cdrouter.py/cdrouter.py:$CDR_DOCKER_VER
      docker tag cdrouter.py/cdrouter.py:$CDR_DOCKER_VER $CI_REGISTRY/qacafe/cdrouter/cdrouter.py/cdrouter.py:latest
      docker push $CI_REGISTRY/qacafe/cdrouter/cdrouter.py/cdrouter.py:$CDR_DOCKER_VER
      docker push $CI_REGISTRY/qacafe/cdrouter/cdrouter.py/cdrouter.py:latest
  interruptible: true
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/'

test:
  image: docker:19.03.12-git
  stage: build
  needs:
    - project: qacafe/cdrouter/cdrouter
      job: releases
      ref: $UPSTREAM_REF
      artifacts: true
  script:
    - |
      if [ "$UPSTREAM_REF" = "master" ]; then
         CDR_DOCKER_VER=latest
      else
         CDR_RELEASE=$(find out/releases -type f -regex .\*/cdrouter-[0-9].\* -print)
         CDR_DOCKER_VER=$(basename $CDR_RELEASE | sed -e 's/cdrouter-\(.*\)\.qacafe\.x86_64.rpm/\1/')
      fi
      export CDR_DOCKER_IMAGE=$CI_REGISTRY/qacafe/cdrouter/cdrouter/cdrouter:$CDR_DOCKER_VER
    - echo $CDR_DOCKER_IMAGE
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add python3 curl
    - curl -s https://bootstrap.pypa.io/pip/get-pip.py | python3
    - pip3 install tox
    - tox -p
  interruptible: true
  artifacts:
    name: "cdrouter.py-coverage-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - .coverage*
      - htmlcov/*
